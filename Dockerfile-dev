# ---- Stage 1: Build the Spring Boot app ----
FROM maven:3.9.6-eclipse-temurin-21 AS build
WORKDIR /workspace

# Copy only the POM first to leverage Docker cache for dependencies
COPY pom.xml .
RUN mvn -B dependency:go-offline

# Copy source and build the JAR
COPY src src
RUN mvn -B -DskipTests clean package

# ---- Stage 2: Runtime image with Java + PostgreSQL ----
FROM eclipse-temurin:21-jre
WORKDIR /app

# Install PostgreSQL server and utilities
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends postgresql postgresql-contrib \
    && rm -rf /var/lib/apt/lists/*

# Environment variables (mirror your application.properties)
ENV DB_HOST=localhost \
    DB_PORT=5432 \
    DB_NAME=file_services \
    DB_USER=postgres \
    DB_PASSWORD=Amir@123456 \
    DB_SCHEMA=public

# Ensure PostgreSQL runtime directories exist
RUN mkdir -p /var/run/postgresql && chown postgres:postgres /var/run/postgresql

# Copy built application and entrypoint script
COPY --from=build /workspace/target/*.jar /app/app.jar
COPY docker/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

EXPOSE 8003 5432
ENTRYPOINT ["/app/entrypoint.sh"]
